import { Global, Module } from '@nestjs/common';
import { MongooseModule, Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Types } from 'mongoose';

import { UserModel } from './user.model.js';

export enum TokenType {
  VERIFY_TOKEN = 'VERIFY_TOKEN',
  FORGOT_PASSWORD_TOKEN = 'FORGOT_PASSWORD_TOKEN',
  TWO_FA_TOKEN = 'TWO_FA_TOKEN',
}

@Schema({ timestamps: true, collection: 'token' })
export class TokenModel {
  _id: Types.ObjectId; // auto generated by mongodb

  @Prop({ type: Types.ObjectId, ref: 'user' })
  user: UserModel;

  @Prop({ type: String, required: true })
  token: string;

  @Prop({ type: String, enum: Object.values(TokenType), required: true })
  tokenType: TokenType;

  @Prop({ type: Date, expires: '10m', default: Date.now })
  issuedAt: Date;

  createdAt: Date; // auto generated as timestamps: true

  updatedAt: Date; // auto generated as timestamps: true
}

const TokenSchema = SchemaFactory.createForClass(TokenModel);

TokenSchema.index({ user: 1, tokenType: 1 }, { unique: true });

@Global()
@Module({
  imports: [MongooseModule.forFeature([{ name: TokenModel.name, schema: TokenSchema }])],
  exports: [MongooseModule],
})
export class TokenModelModule {}
